# T16_2
# Приклади генераторів і їх використання

# п.1 Генератор-вираз
X = (1, -3, 45, -56, 9, -34, -67)
print("Вектор X:\n", X)
Xg = (-e for e in X if e < 0)  # створення генератор-виразу
print("Генератор-вираз Xg:\n", Xg)  # пересвідчимось в цьому

print("Елементи генератор-виразу Xg:")
for e in Xg:  # використання
    print("%5d" % e, end='')
print()

#  Генератор-вираз допускає тільки ОДНОРАЗОВЕ використання !
S = 0
for e in Xg:
    S += e
print("S=", S, "\n")

# п.2 Генератор-функція
"""
За допомогою розкладу функції в ряд Тейлора обчисліть з точністю ε>0
 її значення для заданого значення x=t. Порівняйте отримані результати
 із значеннями відповідних функцій з бібліотеки math.
                        y(x)= exp(x)= ∑(i=0,∞,x^i/i!)
"""

from math import exp


def exp_(x, eps=1e-8):
    """Обчислення exp(x) через ряд Тейлора з точністю eps>0.

    """

    # опис внутрішньої генератор-фенкції :
    def Gexp(x):
        """Нескінченний генератор для обчислення S=∑(i=0,∞,a(i)), a(i)=x^i/i!.

           Використовуємо рекурентні співвідношення для обчислення S, a.
        """
        i = 0;
        a = 1;
        S = 1;
        yield S, a
        while True:
            i += 1;
            a *= x / i;
            S += a;
            yield S, a

    #  тіло функції exp_() :
    e = eps if 0 < eps < 1 else 1e-8
    for S, a in Gexp(x):  # цикл по сгенерованій послідовності
        if abs(a) <= e: break
    return S


# основна програма :
t = float(input("? t="))
print("exp_(%g)=%17.10e \n" % (t, exp_(t, 1e-10)),
      "exp(%g)=%17.10e" % (t, exp(t)))
