from M_set import *

if __name__ == "__main__":
    print("\n ЗАДАЧА a)")

    S = input("Треба рядок: ")
    max_s_value = 0
    max_s = ""
    s_set = M_set()
    for i in S: s_set.add(i)                        # Створюємо мультимножину на основі рядка
    s_set.show("Символів із рядка S")
    for i in S:
        if s_set.count(i) > max_s_value:            # Для виконання достатньо використати метод count() для порівняння кількості символів у мультимножині між собою
            max_s_value = s_set.count(i)
            max_s = i
    print("Символ, який входить у рядок максимальну кількість разів ({}): ".format(max_s_value), max_s)

    print("\n ЗАДАЧА b)")

    S1 = input("Треба 1-ий рядок: ")
    S2 = input("Треба 2-ий рядок: ")
    s_set1 = M_set()
    s_set2 = M_set()
    for i in S1: s_set1.add(i)
    for i in S2: s_set2.add(i)
    s_intersect = s_set1.ms_intersect(s_set2)
    # s_intersect.show()
    f = True
    for k in s_set1.k:
        if s_intersect.count(k) != s_set1.count(k):                 # Якщо мультимножини рівні, то їхній перетин теж повинен бути рівним кожній із них
            print("Не складаються з однакових символів або однакової кількості символів!")
            f = False
            break
    if f:
        for k in s_set2.k:
            if s_intersect.count(k) != s_set2.count(k):             # Якщо мультимножини рівні, то їхній перетин теж повинен бути рівним кожній із них
                print("Не складаються з однакових символів або однакової кількості символів!")
                f = False
                break
    if f: print("Так, дані рядки складаються з одних і тих же символів, які входять до них\n"
                "однакову кількість разів.")

    print("\n ЗАДАЧА c)")

    s_union = s_set1.union(s_set2)
    # s_union.show()
    f = True
    for k in s_union.k:
        if s_union.count(k) != s_set2.count(k):                 # За умовою в другій множині не може бути менше входжень елементів, що є у першій, ніж у першій
            print("В 2-му рядку не всі однакові символи входять до першого або недостатню кількість разів!")
            f = False                                           # Тому друга множина є більшою-рівною у входженнях елементів, а тоді вона повинна бути рівною їхньому об'єднанню
            break
    if f: print("Так, всі однакові символи 2-го рядка входять до 1-го, причому в 2-му рядку ці символи\n"
                "входять не меншу кількість разів, ніж у 1-му.")
